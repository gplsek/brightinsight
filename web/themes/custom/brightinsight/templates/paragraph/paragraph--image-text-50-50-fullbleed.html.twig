{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}
      <!--/*
          Main HTML template for the fifty-fifty-fullbleed component.

          CMS Options:

          Text Color
            - (cf. /fed/components/use-cases/use-cases.html)

          Background Color
            - (cf. /fed/components/use-cases/use-cases.html)

          Variation:
            - Image on Left:     image-left
            - Image on Right:    image-right

          CTA Style:
            - Solid Green:  primary
            - Green Outline:  secondary
            - White Outline:  secondary-white
      */-->


      <!-- Variation: Image right, white text, blue background -->
      {% set img_offset_class = (css.blocks_order.img_order == 'left') ? '' : 'offset-md-6' %}
      {% set text_offset_class = (css.blocks_order.img_order == 'left') ? 'offset-md-7' : 'offset-md-1' %}

      <section class="component-fifty-fifty-fullbleed {{ css.section_classes }}">
        <div class="container-fullbleed">
          <div class="row no-gutters">
            {% if content.field_image.0 %}
              {% set media_img_url = file_url(content.field_image.0['#item'].entity.uri.value) %}

              <div class="col-image col-12 col-md-6 {{img_offset_class}}" style="background-image:url({{media_img_url}})">
                <img class="img-responsive" src="{{media_img_url}}">
              </div>
            {% endif %}
          </div>
        </div>
        <div class="container">
          <div class="row">
            <div class="col-content col-12 col-md-4 {{text_offset_class}}">
              <div class="component-content pad-top-lg pad-bot-lg">
                <h3 class="line">{{ content.field_title }}</h3>
                <div class="body">
                  {{ content.field_content }}
                </div>

                {% if content.field_button_link.0 %}
                  <div class="cta pad-top-md">
                    <a href="{{ content.field_button_link.0 }}" class="component-cta {{css.cta_classes}}"><span>{{ content.field_button_text.0 }}</span></a>
                  </div>
                {% endif %}
              </div>
            </div>
          </div>
        </div>
      </section>
    {% endblock %}
   </div>
{% endblock paragraph %}